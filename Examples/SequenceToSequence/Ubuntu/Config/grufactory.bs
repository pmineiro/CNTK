# NB: lots of redundant dropout nodes removed, may impact results ...

GRUPreviousHC (gruState) = [
   h = BS.Loop.Previous (gruState.h)         // hidden state(t-1)
]

GRUNextHC (gruState) = [
   h = BS.Loop.Next (gruState.h)             // hidden state(t+1)
]

GRUInstantiate (f, x, prevState) = [
  _privateInnards = [
     htprev = prevState.h

     z = Sigmoid (f.Zoo * htprev + f.Zoi * x + f.Zo);
     r = Sigmoid (f.Roo * htprev + f.Roi * x + f.Ro);
     htilde = Tanh (f.Hoo * (r .* htprev) + f.Hoi * x + f.Ho)

     ht = (Constant (1) - z) .* htilde + z .* htprev
  ]

  h = _privateInnards.ht
  dim = f.outputDim
]

RecurrentGRUInstantiate (factory, 
                         x,
                         previousHook=GRUPreviousHC) = [
  prevState = previousHook (gruState)
  gruState = GRUInstantiate (factory, x, prevState)
].gruState

RecurrentGRUFactory (outputDim, inputDim) = [
  Woo() = BS.Parameters.WeightParam (outputDim, outputDim)
  Woi() = BS.Parameters.WeightParam (outputDim, inputDim)
  Bo () = BS.Parameters.BiasParam (outputDim)

  res = [
     Zoo = Woo (); Zoi = Woi (); Zo = Bo ()
     Roo = Woo (); Roi = Woi (); Ro = Bo ()
     Hoo = Woo (); Hoi = Woi (); Ho = Bo ()

     inputDim = inputDim
     outputDim = outputDim
  ]
].res

RecurrentBiresidualGRUStackFactory (layerDims, inputDim) = [
  layerDims1 = layerDims
  inputDim1 = inputDim

  res = [
    factories[i:0..Length (layerDims)-1] = [
      vDim = if i == 0 then inputDim else factories[i-1].dim

      fwd = RecurrentGRUFactory (layerDims[i], vDim)
      bwd = RecurrentGRUFactory (layerDims[i], vDim)
      dim = layerDims[i]
    ]

    layerDims = layerDims1
    inputDim = inputDim1
  ]
].res

RecurrentBiresidualGRUStackInstantiate (factory,
                                        input, 
                                        previousHook=GRUPreviousHC,
                                        nextHook=GRUNextHC,
                                        addDropout=false) = [
  previousHook1 = previousHook ; nextHook1 = nextHook ; 

  layers[i:0..Length (factory.layerDims)-1] = [
    dropInput = if i == 0 then if addDropout then Dropout (input) else input else layers[i-1].h

    fwd = RecurrentGRUInstantiate (factory.factories[i].fwd,
                                   dropInput,
                                   previousHook=previousHook1)

    bwd = RecurrentGRUInstantiate (factory.factories[i].bwd,
                                   dropInput,
                                   previousHook=nextHook1)

    dropfh = if addDropout then Dropout (fwd.h) else fwd.h
    dropbh = if addDropout then Dropout (bwd.h) else bwd.h
    h = dropfh + dropbh + dropInput
    dim = factory.layerDims[i] 
  ]
].layers
