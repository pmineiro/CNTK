GRUPreviousHC (gruState, layerIndex=0) = [
   h = BS.Loop.Previous (gruState.h)         // hidden state(t-1)
   dim = gruState.dim
]

GRUNextHC (gruState, layerIndex=0) = [
   h = BS.Loop.Next (gruState.h)             // hidden state(t+1)
   dim = gruState.dim
]

GRUInstantiate (outputDim, Zoo, Zoi, Zo, Rhh, Rhi, Rh, Hoo, Hoi, Ho, x, inputDim=x.dim, prevState, addDropout=false) = [
  _privateInnards = [
     htprev = prevState.h
     hDim = prevState.dim
     dropx = if addDropout then Dropout (x) else x

     z = Sigmoid (Zoo * htprev + Zoi * dropx + Zo);
     r = Sigmoid (Rhh * htprev + Rhi * dropx + Rh);
     htilde = Tanh (Hoo * (r .* htprev) + Hoi * dropx + Ho)

     ht = (Constant (1) - z) .* htilde + z .* htprev
  ]

  h = _privateInnards.ht
  dim = outputDim
]

RecurrentGRUInstantiate (factory, 
                         x,
                         previousHook=GRUPreviousHC,
                         layerIndex=0,
                         addDropout=false) = [
  layerIndex1 = layerIndex ; addDropout1 = addDropout

  prevState = previousHook (gruState, layerIndex=layerIndex1) 

  gruState = GRUInstantiate (factory.outputDim,
                             factory.Zoo,
                             factory.Zoi,
                             factory.Zo,
                             factory.Roo,
                             factory.Roi,
                             factory.Ro,
                             factory.Hoo,
                             factory.Hoi,
                             factory.Ho,
                             x,
                             inputDim=factory.inputDim,
                             prevState, 
                             addDropout=addDropout1)
].gruState

RecurrentGRUFactory (outputDim, inputDim) = [
  Woo() = BS.Parameters.WeightParam (outputDim, outputDim)
  Woi() = BS.Parameters.WeightParam (outputDim, inputDim)
  Bo () = BS.Parameters.BiasParam (outputDim)

  res = [
     Zoo = Woo (); Zoi = Woi (); Zo = Bo ()
     Roo = Woo (); Roi = Woi (); Ro = Bo ()
     Hoo = Woo (); Hoi = Woi (); Ho = Bo ()

     inputDim = inputDim
     outputDim = outputDim
  ]
].res

RecurrentBiresidualGRUStackFactory (layerDims, inputDim) = [
  layerDims1 = layerDims
  inputDim1 = inputDim

  res = [
    factories[i:0..Length (layerDims)-1] = [
      vDim = if i == 0 then inputDim else factories[i-1].dim

      fwd = RecurrentGRUFactory (layerDims[i], vDim)
      bwd = RecurrentGRUFactory (layerDims[i], vDim)
      dim = layerDims[i]
    ]

    layerDims = layerDims1
    inputDim = inputDim1
  ]
].res

RecurrentBiresidualGRUStackInstantiate (factory,
                                        input, 
                                        previousHook=GRUPreviousHC,
                                        nextHook=GRUNextHC,
                                        addDropout=false) = [
  previousHook1 = previousHook ; nextHook1 = nextHook ; 
  addDropout1 = addDropout ;

  layers[i:0..Length (factory.layerDims)-1] = [
    dropInput = if i == 0 then if addDropout then Dropout (input) else input else layers[i-1].h

    fwd = RecurrentGRUInstantiate (factory.factories[i].fwd,
                                   dropInput,
                                   previousHook=previousHook1,
                                   layerIndex=i,
                                   addDropout=addDropout1)

    bwd = RecurrentGRUInstantiate (factory.factories[i].bwd,
                                   dropInput,
                                   previousHook=nextHook1,
                                   layerIndex=i,
                                   addDropout=addDropout1)

    dropfh = if addDropout then Dropout (fwd.h) else fwd.h
    dropbh = if addDropout then Dropout (bwd.h) else bwd.h
    h = dropfh + dropbh + dropInput
    dim = factory.layerDims[i] 
  ]
].layers
